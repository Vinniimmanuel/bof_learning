
repeat_greet:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	20 00                	and    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 34f:	00 03                	add    BYTE PTR [rbx],al
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 02                	add    BYTE PTR [rdx],al
 359:	80 00 c0             	add    BYTE PTR [rax],0xc0
 35c:	04 00                	add    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	01 00                	add    DWORD PTR [rax],eax
 362:	00 00                	add    BYTE PTR [rax],al
 364:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    al,0x0
 36a:	00 00                	add    BYTE PTR [rax],al
 36c:	14 00                	adc    al,0x0
 36e:	00 00                	add    BYTE PTR [rax],al
 370:	03 00                	add    eax,DWORD PTR [rax]
 372:	00 00                	add    BYTE PTR [rax],al
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push rbp
 377:	00 22                	add    BYTE PTR [rdx],ah
 379:	f5                   	cmc    
 37a:	ac                   	lods   al,BYTE PTR ds:[rsi]
 37b:	e2 d9                	loop   356 <__abi_tag-0x36>
 37d:	3a 9b 1e 4a 92 83    	cmp    bl,BYTE PTR [rbx-0x7c6db5e2]
 383:	6b 20 7b             	imul   esp,DWORD PTR [rax],0x7b
 386:	b4 6b                	mov    ah,0x6b
 388:	d7                   	xlat   BYTE PTR ds:[rbx]
 389:	05                   	.byte 0x5
 38a:	95                   	xchg   ebp,eax
 38b:	ea                   	(bad)  

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    al,0x0
 38e:	00 00                	add    BYTE PTR [rax],al
 390:	10 00                	adc    BYTE PTR [rax],al
 392:	00 00                	add    BYTE PTR [rax],al
 394:	01 00                	add    DWORD PTR [rax],eax
 396:	00 00                	add    BYTE PTR [rax],al
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push rbp
 39b:	00 00                	add    BYTE PTR [rax],al
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 03                	add    BYTE PTR [rbx],al
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 02                	add    BYTE PTR [rdx],al
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 00                	add    BYTE PTR [rax],al
 3a9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    al,BYTE PTR [rax]
 3b2:	00 00                	add    BYTE PTR [rax],al
 3b4:	06                   	(bad)  
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 01                	add    BYTE PTR [rcx],al
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 06                	add    BYTE PTR [rsi],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 00                	add    BYTE PTR [rax],al
 3c1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3c7:	00 06                	add    BYTE PTR [rsi],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 00                	add    BYTE PTR [rax],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 d1                	add    cl,dl
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	10 00                	adc    BYTE PTR [rax],al
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 406:	00 00                	add    BYTE PTR [rax],al
 408:	48 00 00             	rex.W add BYTE PTR [rax],al
 40b:	00 20                	add    BYTE PTR [rax],ah
	...
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	00 22                	add    BYTE PTR [rdx],ah
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 12                	add    BYTE PTR [rdx],dl
	...
 435:	00 00                	add    BYTE PTR [rax],al
 437:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
 43b:	00 20                	add    BYTE PTR [rax],ah
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 73 00             	add    BYTE PTR [rbx+0x0],dh
 452:	00 00                	add    BYTE PTR [rax],al
 454:	20 00                	and    BYTE PTR [rax],al
	...
 466:	00 00                	add    BYTE PTR [rax],al
 468:	01 00                	add    DWORD PTR [rax],eax
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000480 <.dynstr>:
 480:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 483:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 486:	5f                   	pop    rdi
 487:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 48d:	7a 65                	jp     4f4 <__abi_tag+0x168>
 48f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 492:	6c                   	ins    BYTE PTR es:[rdi],dx
 493:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 49a:	72 74                	jb     510 <__abi_tag+0x184>
 49c:	5f                   	pop    rdi
 49d:	6d                   	ins    DWORD PTR es:[rdi],dx
 49e:	61                   	(bad)  
 49f:	69 6e 00 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x0],0x73747570
 4a6:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 4aa:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 4ac:	73 6f                	jae    51d <__abi_tag+0x191>
 4ae:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 4b3:	49                   	rex.WB
 4b4:	42                   	rex.X
 4b5:	43 5f                	rex.XB pop r15
 4b7:	32 2e                	xor    ch,BYTE PTR [rsi]
 4b9:	32 2e                	xor    ch,BYTE PTR [rsi]
 4bb:	35 00 47 4c 49       	xor    eax,0x494c4700
 4c0:	42                   	rex.X
 4c1:	43 5f                	rex.XB pop r15
 4c3:	32 2e                	xor    ch,BYTE PTR [rsi]
 4c5:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 4c8:	5f                   	pop    rdi
 4c9:	49 54                	rex.WB push r12
 4cb:	4d 5f                	rex.WRB pop r15
 4cd:	64 65 72 65          	fs gs jb 536 <__abi_tag+0x1aa>
 4d1:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4d8:	4d 
 4d9:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4dd:	65 54                	gs push rsp
 4df:	61                   	(bad)  
 4e0:	62                   	(bad)  
 4e1:	6c                   	ins    BYTE PTR es:[rdi],dx
 4e2:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 4e6:	67 6d                	ins    DWORD PTR es:[edi],dx
 4e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4ea:	5f                   	pop    rdi
 4eb:	73 74                	jae    561 <__abi_tag+0x1d5>
 4ed:	61                   	(bad)  
 4ee:	72 74                	jb     564 <__abi_tag+0x1d8>
 4f0:	5f                   	pop    rdi
 4f1:	5f                   	pop    rdi
 4f2:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4f5:	54                   	push   rsp
 4f6:	4d 5f                	rex.WRB pop r15
 4f8:	72 65                	jb     55f <__abi_tag+0x1d3>
 4fa:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 501:	4d 
 502:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 504:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 505:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 506:	65 54                	gs push rsp
 508:	61                   	(bad)  
 509:	62                   	.byte 0x62
 50a:	6c                   	ins    BYTE PTR es:[rdi],dx
 50b:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000050e <.gnu.version>:
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	02 00                	add    al,BYTE PTR [rax]
 512:	01 00                	add    DWORD PTR [rax],eax
 514:	03 00                	add    eax,DWORD PTR [rax]
 516:	01 00                	add    DWORD PTR [rax],eax
 518:	01 00                	add    DWORD PTR [rax],eax
 51a:	03 00                	add    eax,DWORD PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000520 <.gnu.version_r>:
 520:	01 00                	add    DWORD PTR [rax],eax
 522:	02 00                	add    al,BYTE PTR [rax]
 524:	27                   	(bad)  
 525:	00 00                	add    BYTE PTR [rax],al
 527:	00 10                	add    BYTE PTR [rax],dl
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 00                	add    BYTE PTR [rax],al
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 532:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 538:	31 00                	xor    DWORD PTR [rax],eax
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	10 00                	adc    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	b4 91                	mov    ah,0x91
 542:	96                   	xchg   esi,eax
 543:	06                   	(bad)  
 544:	00 00                	add    BYTE PTR [rax],al
 546:	02 00                	add    al,BYTE PTR [rax]
 548:	3d 00 00 00 00       	cmp    eax,0x0
 54d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000550 <.rela.dyn>:
 550:	b8 3d 00 00 00       	mov    eax,0x3d
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 08                	add    BYTE PTR [rax],cl
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 00                	add    BYTE PTR [rax],al
 55d:	00 00                	add    BYTE PTR [rax],al
 55f:	00 40 11             	add    BYTE PTR [rax+0x11],al
 562:	00 00                	add    BYTE PTR [rax],al
 564:	00 00                	add    BYTE PTR [rax],al
 566:	00 00                	add    BYTE PTR [rax],al
 568:	c0 3d 00 00 00 00 00 	sar    BYTE PTR [rip+0x0],0x0        # 56f <__abi_tag+0x1e3>
 56f:	00 08                	add    BYTE PTR [rax],cl
	...
 579:	11 00                	adc    DWORD PTR [rax],eax
 57b:	00 00                	add    BYTE PTR [rax],al
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 08                	add    BYTE PTR [rax],cl
 581:	40 00 00             	rex add BYTE PTR [rax],al
 584:	00 00                	add    BYTE PTR [rax],al
 586:	00 00                	add    BYTE PTR [rax],al
 588:	08 00                	or     BYTE PTR [rax],al
 58a:	00 00                	add    BYTE PTR [rax],al
 58c:	00 00                	add    BYTE PTR [rax],al
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	08 40 00             	or     BYTE PTR [rax+0x0],al
 593:	00 00                	add    BYTE PTR [rax],al
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 d8                	add    al,bl
 599:	3f                   	(bad)  
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	06                   	(bad)  
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 01                	add    BYTE PTR [rcx],al
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 e0                	add    al,ah
 5b1:	3f                   	(bad)  
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	00 00                	add    BYTE PTR [rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	06                   	(bad)  
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 02                	add    BYTE PTR [rdx],al
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 e8                	add    al,ch
 5c9:	3f                   	(bad)  
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	00 00                	add    BYTE PTR [rax],al
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	06                   	(bad)  
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	f0 3f                	lock (bad) 
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	00 00                	add    BYTE PTR [rax],al
 5e6:	00 00                	add    BYTE PTR [rax],al
 5e8:	06                   	(bad)  
 5e9:	00 00                	add    BYTE PTR [rax],al
 5eb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5f1 <__abi_tag+0x265>
 5f1:	00 00                	add    BYTE PTR [rax],al
 5f3:	00 00                	add    BYTE PTR [rax],al
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 f8                	add    al,bh
 5f9:	3f                   	(bad)  
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	00 00                	add    BYTE PTR [rax],al
 5fe:	00 00                	add    BYTE PTR [rax],al
 600:	06                   	(bad)  
 601:	00 00                	add    BYTE PTR [rax],al
 603:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

0000000000000610 <.rela.plt>:
 610:	d0 3f                	sar    BYTE PTR [rdi],1
 612:	00 00                	add    BYTE PTR [rax],al
 614:	00 00                	add    BYTE PTR [rax],al
 616:	00 00                	add    BYTE PTR [rax],al
 618:	07                   	(bad)  
 619:	00 00                	add    BYTE PTR [rax],al
 61b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	push   QWORD PTR [rip+0x2f9a]        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f9b]        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmp QWORD PTR [rip+0x2fad]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001050 <puts@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f75]        # 3fd0 <puts@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    ebp,ebp
    1066:	49 89 d1             	mov    r9,rdx
    1069:	5e                   	pop    rsi
    106a:	48 89 e2             	mov    rdx,rsp
    106d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1071:	50                   	push   rax
    1072:	54                   	push   rsp
    1073:	45 31 c0             	xor    r8d,r8d
    1076:	31 c9                	xor    ecx,ecx
    1078:	48 8d 3d ca 00 00 00 	lea    rdi,[rip+0xca]        # 1149 <main>
    107f:	ff 15 53 2f 00 00    	call   QWORD PTR [rip+0x2f53]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1085:	f4                   	hlt    
    1086:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    108d:	00 00 00 

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    rdi,[rip+0x2f79]        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    rax,[rip+0x2f72]        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    rax,rdi
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 36 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f36]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   rax,rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    rax
    10b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10b8:	c3                   	ret    
    10b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    rdi,[rip+0x2f49]        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    rsi,[rip+0x2f42]        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    rsi,rdi
    10d1:	48 89 f0             	mov    rax,rsi
    10d4:	48 c1 ee 3f          	shr    rsi,0x3f
    10d8:	48 c1 f8 03          	sar    rax,0x3
    10dc:	48 01 c6             	add    rsi,rax
    10df:	48 d1 fe             	sar    rsi,1
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f05]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   rax,rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    rax
    10f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f05],0x0        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   rbp
    110e:	48 83 3d e2 2e 00 00 	cmp    QWORD PTR [rip+0x2ee2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    rbp,rsp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2ee6]        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	call   1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	mov    BYTE PTR [rip+0x2edd],0x1        # 4010 <__TMC_END__>
    1133:	5d                   	pop    rbp
    1134:	c3                   	ret    
    1135:	0f 1f 00             	nop    DWORD PTR [rax]
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   rbp
    114e:	48 89 e5             	mov    rbp,rsp
    1151:	48 83 ec 10          	sub    rsp,0x10
    1155:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    115c:	eb 13                	jmp    1171 <main+0x28>
    115e:	48 8d 05 9f 0e 00 00 	lea    rax,[rip+0xe9f]        # 2004 <_IO_stdin_used+0x4>
    1165:	48 89 c7             	mov    rdi,rax
    1168:	e8 e3 fe ff ff       	call   1050 <puts@plt>
    116d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    1171:	83 7d fc 09          	cmp    DWORD PTR [rbp-0x4],0x9
    1175:	7e e7                	jle    115e <main+0x15>
    1177:	b8 00 00 00 00       	mov    eax,0x0
    117c:	c9                   	leave  
    117d:	c3                   	ret    

Disassembly of section .fini:

0000000000001180 <_fini>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	48 83 ec 08          	sub    rsp,0x8
    1188:	48 83 c4 08          	add    rsp,0x8
    118c:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	69                   	.byte 0x69
    2005:	64                   	fs
    2006:	69                   	.byte 0x69
    2007:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2008:	74 00                	je     200a <_IO_stdin_used+0xa>

Disassembly of section .eh_frame_hdr:

000000000000200c <__GNU_EH_FRAME_HDR>:
    200c:	01 1b                	add    DWORD PTR [rbx],ebx
    200e:	03 3b                	add    edi,DWORD PTR [rbx]
    2010:	30 00                	xor    BYTE PTR [rax],al
    2012:	00 00                	add    BYTE PTR [rax],al
    2014:	05 00 00 00 14       	add    eax,0x14000000
    2019:	f0 ff                	lock (bad) 
    201b:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    201f:	00 34 f0             	add    BYTE PTR [rax+rsi*8],dh
    2022:	ff                   	(bad)  
    2023:	ff 8c 00 00 00 44 f0 	dec    DWORD PTR [rax+rax*1-0xfbc0000]
    202a:	ff                   	(bad)  
    202b:	ff a4 00 00 00 54 f0 	jmp    QWORD PTR [rax+rax*1-0xfac0000]
    2032:	ff                   	(bad)  
    2033:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
    2037:	00 3d f1 ff ff bc    	add    BYTE PTR [rip+0xffffffffbcfffff1],bh        # ffffffffbd00202e <_end+0xffffffffbcffe016>
    203d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000002040 <__FRAME_END__-0xa8>:
    2040:	14 00                	adc    al,0x0
    2042:	00 00                	add    BYTE PTR [rax],al
    2044:	00 00                	add    BYTE PTR [rax],al
    2046:	00 00                	add    BYTE PTR [rax],al
    2048:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    204b:	00 01                	add    BYTE PTR [rcx],al
    204d:	78 10                	js     205f <__GNU_EH_FRAME_HDR+0x53>
    204f:	01 1b                	add    DWORD PTR [rbx],ebx
    2051:	0c 07                	or     al,0x7
    2053:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    2059:	00 00                	add    BYTE PTR [rax],al
    205b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    205e:	00 00                	add    BYTE PTR [rax],al
    2060:	00 f0                	add    al,dh
    2062:	ff                   	(bad)  
    2063:	ff 26                	jmp    QWORD PTR [rsi]
    2065:	00 00                	add    BYTE PTR [rax],al
    2067:	00 00                	add    BYTE PTR [rax],al
    2069:	44 07                	rex.R (bad) 
    206b:	10 00                	adc    BYTE PTR [rax],al
    206d:	00 00                	add    BYTE PTR [rax],al
    206f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    2072:	00 00                	add    BYTE PTR [rax],al
    2074:	34 00                	xor    al,0x0
    2076:	00 00                	add    BYTE PTR [rax],al
    2078:	a8 ef                	test   al,0xef
    207a:	ff                   	(bad)  
    207b:	ff 20                	jmp    QWORD PTR [rax]
    207d:	00 00                	add    BYTE PTR [rax],al
    207f:	00 00                	add    BYTE PTR [rax],al
    2081:	0e                   	(bad)  
    2082:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    2085:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    2088:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    208b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    208e:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    2090:	2a 33                	sub    dh,BYTE PTR [rbx]
    2092:	24 22                	and    al,0x22
    2094:	00 00                	add    BYTE PTR [rax],al
    2096:	00 00                	add    BYTE PTR [rax],al
    2098:	14 00                	adc    al,0x0
    209a:	00 00                	add    BYTE PTR [rax],al
    209c:	5c                   	pop    rsp
    209d:	00 00                	add    BYTE PTR [rax],al
    209f:	00 a0 ef ff ff 10    	add    BYTE PTR [rax+0x10ffffef],ah
	...
    20ad:	00 00                	add    BYTE PTR [rax],al
    20af:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    20b2:	00 00                	add    BYTE PTR [rax],al
    20b4:	74 00                	je     20b6 <__GNU_EH_FRAME_HDR+0xaa>
    20b6:	00 00                	add    BYTE PTR [rax],al
    20b8:	98                   	cwde   
    20b9:	ef                   	out    dx,eax
    20ba:	ff                   	(bad)  
    20bb:	ff 10                	call   QWORD PTR [rax]
	...
    20c5:	00 00                	add    BYTE PTR [rax],al
    20c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20ca:	00 00                	add    BYTE PTR [rax],al
    20cc:	8c 00                	mov    WORD PTR [rax],es
    20ce:	00 00                	add    BYTE PTR [rax],al
    20d0:	79 f0                	jns    20c2 <__GNU_EH_FRAME_HDR+0xb6>
    20d2:	ff                   	(bad)  
    20d3:	ff 35 00 00 00 00    	push   QWORD PTR [rip+0x0]        # 20d9 <__GNU_EH_FRAME_HDR+0xcd>
    20d9:	45 0e                	rex.RB (bad) 
    20db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    20e2:	0c 07                	or     al,0x7
    20e4:	08 00                	or     BYTE PTR [rax],al
	...

00000000000020e8 <__FRAME_END__>:
    20e8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003db8 <__frame_dummy_init_array_entry>:
    3db8:	40 11 00             	rex adc DWORD PTR [rax],eax
    3dbb:	00 00                	add    BYTE PTR [rax],al
    3dbd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003dc0 <__do_global_dtors_aux_fini_array_entry>:
    3dc0:	00 11                	add    BYTE PTR [rcx],dl
    3dc2:	00 00                	add    BYTE PTR [rax],al
    3dc4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003dc8 <_DYNAMIC>:
    3dc8:	01 00                	add    DWORD PTR [rax],eax
    3dca:	00 00                	add    BYTE PTR [rax],al
    3dcc:	00 00                	add    BYTE PTR [rax],al
    3dce:	00 00                	add    BYTE PTR [rax],al
    3dd0:	27                   	(bad)  
    3dd1:	00 00                	add    BYTE PTR [rax],al
    3dd3:	00 00                	add    BYTE PTR [rax],al
    3dd5:	00 00                	add    BYTE PTR [rax],al
    3dd7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3dda:	00 00                	add    BYTE PTR [rax],al
    3ddc:	00 00                	add    BYTE PTR [rax],al
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	00 10                	add    BYTE PTR [rax],dl
    3de2:	00 00                	add    BYTE PTR [rax],al
    3de4:	00 00                	add    BYTE PTR [rax],al
    3de6:	00 00                	add    BYTE PTR [rax],al
    3de8:	0d 00 00 00 00       	or     eax,0x0
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 80 11 00 00 00    	add    BYTE PTR [rax+0x11],al
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 19                	add    BYTE PTR [rcx],bl
    3df9:	00 00                	add    BYTE PTR [rax],al
    3dfb:	00 00                	add    BYTE PTR [rax],al
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 b8 3d 00 00 00    	add    BYTE PTR [rax+0x3d],bh
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 1b                	add    BYTE PTR [rbx],bl
    3e09:	00 00                	add    BYTE PTR [rax],al
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 08                	add    BYTE PTR [rax],cl
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	00 1a                	add    BYTE PTR [rdx],bl
    3e19:	00 00                	add    BYTE PTR [rax],al
    3e1b:	00 00                	add    BYTE PTR [rax],al
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 c0                	add    al,al
    3e21:	3d 00 00 00 00       	cmp    eax,0x0
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	1c 00                	sbb    al,0x0
    3e2a:	00 00                	add    BYTE PTR [rax],al
    3e2c:	00 00                	add    BYTE PTR [rax],al
    3e2e:	00 00                	add    BYTE PTR [rax],al
    3e30:	08 00                	or     BYTE PTR [rax],al
    3e32:	00 00                	add    BYTE PTR [rax],al
    3e34:	00 00                	add    BYTE PTR [rax],al
    3e36:	00 00                	add    BYTE PTR [rax],al
    3e38:	f5                   	cmc    
    3e39:	fe                   	(bad)  
    3e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 b0 03 00 00 00    	add    BYTE PTR [rax+0x3],dh
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e4d <_DYNAMIC+0x85>
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 80 04 00 00 00    	add    BYTE PTR [rax+0x4],al
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 06                	add    BYTE PTR [rsi],al
    3e59:	00 00                	add    BYTE PTR [rax],al
    3e5b:	00 00                	add    BYTE PTR [rax],al
    3e5d:	00 00                	add    BYTE PTR [rax],al
    3e5f:	00 d8                	add    al,bl
    3e61:	03 00                	add    eax,DWORD PTR [rax]
    3e63:	00 00                	add    BYTE PTR [rax],al
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 0a                	add    BYTE PTR [rdx],cl
    3e69:	00 00                	add    BYTE PTR [rax],al
    3e6b:	00 00                	add    BYTE PTR [rax],al
    3e6d:	00 00                	add    BYTE PTR [rax],al
    3e6f:	00 8d 00 00 00 00    	add    BYTE PTR [rbp+0x0],cl
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 0b                	add    BYTE PTR [rbx],cl
    3e79:	00 00                	add    BYTE PTR [rax],al
    3e7b:	00 00                	add    BYTE PTR [rax],al
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 18                	add    BYTE PTR [rax],bl
    3e81:	00 00                	add    BYTE PTR [rax],al
    3e83:	00 00                	add    BYTE PTR [rax],al
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3e8d <_DYNAMIC+0xc5>
	...
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 03                	add    BYTE PTR [rbx],al
    3e99:	00 00                	add    BYTE PTR [rax],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 b8 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bh
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 02                	add    BYTE PTR [rdx],al
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 18                	add    BYTE PTR [rax],bl
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 00                	add    BYTE PTR [rax],al
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    3eba:	00 00                	add    BYTE PTR [rax],al
    3ebc:	00 00                	add    BYTE PTR [rax],al
    3ebe:	00 00                	add    BYTE PTR [rax],al
    3ec0:	07                   	(bad)  
    3ec1:	00 00                	add    BYTE PTR [rax],al
    3ec3:	00 00                	add    BYTE PTR [rax],al
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 17                	add    BYTE PTR [rdi],dl
    3ec9:	00 00                	add    BYTE PTR [rax],al
    3ecb:	00 00                	add    BYTE PTR [rax],al
    3ecd:	00 00                	add    BYTE PTR [rax],al
    3ecf:	00 10                	add    BYTE PTR [rax],dl
    3ed1:	06                   	(bad)  
    3ed2:	00 00                	add    BYTE PTR [rax],al
    3ed4:	00 00                	add    BYTE PTR [rax],al
    3ed6:	00 00                	add    BYTE PTR [rax],al
    3ed8:	07                   	(bad)  
    3ed9:	00 00                	add    BYTE PTR [rax],al
    3edb:	00 00                	add    BYTE PTR [rax],al
    3edd:	00 00                	add    BYTE PTR [rax],al
    3edf:	00 50 05             	add    BYTE PTR [rax+0x5],dl
    3ee2:	00 00                	add    BYTE PTR [rax],al
    3ee4:	00 00                	add    BYTE PTR [rax],al
    3ee6:	00 00                	add    BYTE PTR [rax],al
    3ee8:	08 00                	or     BYTE PTR [rax],al
    3eea:	00 00                	add    BYTE PTR [rax],al
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 09                	add    BYTE PTR [rcx],cl
    3ef9:	00 00                	add    BYTE PTR [rax],al
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 18                	add    BYTE PTR [rax],bl
    3f01:	00 00                	add    BYTE PTR [rax],al
    3f03:	00 00                	add    BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 1e                	add    BYTE PTR [rsi],bl
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 08                	add    BYTE PTR [rax],cl
    3f11:	00 00                	add    BYTE PTR [rax],al
    3f13:	00 00                	add    BYTE PTR [rax],al
    3f15:	00 00                	add    BYTE PTR [rax],al
    3f17:	00 fb                	add    bl,bh
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 01                	add    BYTE PTR [rcx],al
    3f21:	00 00                	add    BYTE PTR [rax],al
    3f23:	08 00                	or     BYTE PTR [rax],al
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 fe                	add    dh,bh
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 20                	add    BYTE PTR [rax],ah
    3f31:	05 00 00 00 00       	add    eax,0x0
    3f36:	00 00                	add    BYTE PTR [rax],al
    3f38:	ff                   	(bad)  
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 01                	add    BYTE PTR [rcx],al
    3f41:	00 00                	add    BYTE PTR [rax],al
    3f43:	00 00                	add    BYTE PTR [rax],al
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 f0                	add    al,dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 0e                	add    BYTE PTR [rsi],cl
    3f51:	05 00 00 00 00       	add    eax,0x0
    3f56:	00 00                	add    BYTE PTR [rax],al
    3f58:	f9                   	stc    
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fb8 <_GLOBAL_OFFSET_TABLE_>:
    3fb8:	c8 3d 00 00          	enter  0x3d,0x0
	...
    3fd0:	30 10                	xor    BYTE PTR [rax],dl
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004010 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	31 2e                	xor    DWORD PTR [rsi],ebp
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x75623531>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	32 2e                	xor    ch,BYTE PTR [rsi]
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	31 2e                	xor    DWORD PTR [rsi],ebp
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	49 11 00             	adc    QWORD PTR [r8],rax
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1d <__abi_tag-0x36f>
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	96                   	xchg   esi,eax
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 05 00 01 08 00    	add    BYTE PTR [rip+0x80100],al        # 80109 <_end+0x7c0f1>
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 02                	add    BYTE PTR [rdx],al
   d:	2f                   	(bad)  
   e:	00 00                	add    BYTE PTR [rax],al
  10:	00 1d 24 00 00 00    	add    BYTE PTR [rip+0x24],bl        # 3a <__abi_tag-0x352>
  16:	00 00                	add    BYTE PTR [rax],al
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	49 11 00             	adc    QWORD PTR [r8],rax
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 27 <__abi_tag-0x365>
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 01                	add    BYTE PTR [rcx],al
  2f:	08 07                	or     BYTE PTR [rdi],al
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 00                	add    BYTE PTR [rax],al
  35:	01 04 07             	add    DWORD PTR [rdi+rax*1],eax
  38:	05 00 00 00 01       	add    eax,0x1000000
  3d:	01 08                	add    DWORD PTR [rax],ecx
  3f:	bd 00 00 00 01       	mov    ebp,0x1000000
  44:	02 07                	add    al,BYTE PTR [rdi]
  46:	12 00                	adc    al,BYTE PTR [rax]
  48:	00 00                	add    BYTE PTR [rax],al
  4a:	01 01                	add    DWORD PTR [rcx],eax
  4c:	06                   	(bad)  
  4d:	bf 00 00 00 01       	mov    edi,0x1000000
  52:	02 05 25 00 00 00    	add    al,BYTE PTR [rip+0x25]        # 7d <__abi_tag-0x30f>
  58:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
  5f:	01 08                	add    DWORD PTR [rax],ecx
  61:	05 cb 00 00 00       	add    eax,0xcb
  66:	01 01                	add    DWORD PTR [rcx],eax
  68:	06                   	(bad)  
  69:	c6 00 00             	mov    BYTE PTR [rax],0x0
  6c:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
  6f:	00 00                	add    BYTE PTR [rax],al
  71:	00 01                	add    BYTE PTR [rcx],al
  73:	02 05 58 00 00 00    	add    al,BYTE PTR [rip+0x58]        # d1 <__abi_tag-0x2bb>
  79:	49 11 00             	adc    QWORD PTR [r8],rax
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	00 00                	add    BYTE PTR [rax],al
  80:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 86 <__abi_tag-0x306>
  86:	00 00                	add    BYTE PTR [rax],al
  88:	00 01                	add    BYTE PTR [rcx],al
  8a:	9c                   	pushf  
  8b:	05 69 00 01 03       	add    eax,0x3010069
  90:	06                   	(bad)  
  91:	58                   	pop    rax
  92:	00 00                	add    BYTE PTR [rax],al
  94:	00 02                	add    BYTE PTR [rdx],al
  96:	91                   	xchg   ecx,eax
  97:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 24 00             	add    DWORD PTR [rax+rax*1],esp
   3:	0b 0b                	or     ecx,DWORD PTR [rbx]
   5:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
   8:	0e                   	(bad)  
   9:	00 00                	add    BYTE PTR [rax],al
   b:	02 11                	add    dl,BYTE PTR [rcx]
   d:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1321 <_end+0x30ad309>
  13:	1f                   	(bad)  
  14:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
  16:	11 01                	adc    DWORD PTR [rcx],eax
  18:	12 07                	adc    al,BYTE PTR [rdi]
  1a:	10 17                	adc    BYTE PTR [rdi],dl
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  21:	0b 0b                	or     ecx,DWORD PTR [rbx]
  23:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
  26:	08 00                	or     BYTE PTR [rax],al
  28:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
  2b:	01 3f                	add    DWORD PTR [rdi],edi
  2d:	19 03                	sbb    DWORD PTR [rbx],eax
  2f:	0e                   	(bad)  
  30:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  32:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  34:	39 0b                	cmp    DWORD PTR [rbx],ecx
  36:	49 13 11             	adc    rdx,QWORD PTR [r9]
  39:	01 12                	add    DWORD PTR [rdx],edx
  3b:	07                   	(bad)  
  3c:	40 18 7c 19 00       	sbb    BYTE PTR [rcx+rbx*1+0x0],dil
  41:	00 05 34 00 03 08    	add    BYTE PTR [rip+0x8030034],al        # 803007b <_end+0x802c063>
  47:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  49:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  4b:	39 0b                	cmp    DWORD PTR [rbx],ecx
  4d:	49 13 02             	adc    rax,QWORD PTR [r10]
  50:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	63 00                	movsxd eax,DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 08 00 2a       	add    eax,0x2a000800
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	01 01                	add    DWORD PTR [rcx],eax
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     eax,0x1010100
  16:	01 00                	add    DWORD PTR [rax],eax
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	01 00                	add    DWORD PTR [rax],eax
  1c:	00 01                	add    BYTE PTR [rcx],al
  1e:	01 01                	add    DWORD PTR [rcx],eax
  20:	1f                   	(bad)  
  21:	01 00                	add    DWORD PTR [rax],eax
  23:	00 00                	add    BYTE PTR [rax],al
  25:	00 02                	add    BYTE PTR [rdx],al
  27:	01 1f                	add    DWORD PTR [rdi],ebx
  29:	02 0f                	add    cl,BYTE PTR [rdi]
  2b:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 05 0b 00 09 02    	add    BYTE PTR [rip+0x209000b],al        # 2090046 <_end+0x208c02e>
  3b:	49 11 00             	adc    QWORD PTR [r8],rax
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
  42:	00 13                	add    BYTE PTR [rbx],dl
  44:	05 08 bc 05 02       	add    eax,0x205bc08
  49:	74 05                	je     50 <__abi_tag-0x33c>
  4b:	03 00                	add    eax,DWORD PTR [rax]
  4d:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
  50:	2f                   	(bad)  
  51:	05 13 00 02 04       	add    eax,0x4020013
  56:	03 e3                	add    esp,ebx
  58:	05 0d 00 02 04       	add    eax,0x402000d
  5d:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
  60:	01 af 02 02 00 01    	add    DWORD PTR [rdi+0x1000202],ebp
  66:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6c                   	ins    BYTE PTR es:[rdi],dx
   1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   3:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   7:	73 69                	jae    72 <__abi_tag-0x31a>
   9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  10:	74 00                	je     12 <__abi_tag-0x37a>
  12:	73 68                	jae    7c <__abi_tag-0x310>
  14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  15:	72 74                	jb     8b <__abi_tag-0x301>
  17:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  1a:	73 69                	jae    85 <__abi_tag-0x307>
  1c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  1e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  23:	74 00                	je     25 <__abi_tag-0x367>
  25:	73 68                	jae    8f <__abi_tag-0x2fd>
  27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  28:	72 74                	jb     9e <__abi_tag-0x2ee>
  2a:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  2d:	74 00                	je     2f <__abi_tag-0x35d>
  2f:	47                   	rex.RXB
  30:	4e 55                	rex.WRX push rbp
  32:	20 43 31             	and    BYTE PTR [rbx+0x31],al
  35:	37                   	(bad)  
  36:	20 31                	and    BYTE PTR [rcx],dh
  38:	31 2e                	xor    DWORD PTR [rsi],ebp
  3a:	33 2e                	xor    ebp,DWORD PTR [rsi]
  3c:	30 20                	xor    BYTE PTR [rax],ah
  3e:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  43:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  49:	72 69                	jb     b4 <__abi_tag-0x2d8>
  4b:	63 20                	movsxd esp,DWORD PTR [rax]
  4d:	2d 6d 61 72 63       	sub    eax,0x6372616d
  52:	68 3d 78 38 36       	push   0x3638783d
  57:	2d 36 34 20 2d       	sub    eax,0x2d203436
  5c:	67 20 2d 66 61 73 79 	and    BYTE PTR [eip+0x79736166],ch        # 797361c9 <_end+0x797321b1>
  63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  64:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
  67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  68:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  6a:	75 73                	jne    df <__abi_tag-0x2ad>
  6c:	2d 75 6e 77 69       	sub    eax,0x69776e75
  71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  72:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
  78:	65 73 20             	gs jae 9b <__abi_tag-0x2f1>
  7b:	2d 66 73 74 61       	sub    eax,0x61747366
  80:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  83:	70 72                	jo     f7 <__abi_tag-0x295>
  85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  86:	74 65                	je     ed <__abi_tag-0x29f>
  88:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  8c:	2d 73 74 72 6f       	sub    eax,0x6f727473
  91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  92:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617473ff <_end+0x617433e7>
  99:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  9c:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  a0:	68 2d 70 72 6f       	push   0x6f72702d
  a5:	74 65                	je     10c <__abi_tag-0x280>
  a7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  ac:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666418 <_end+0x2d662400>
  b2:	70 72                	jo     126 <__abi_tag-0x266>
  b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b5:	74 65                	je     11c <__abi_tag-0x270>
  b7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  bc:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
  bf:	73 69                	jae    12a <__abi_tag-0x262>
  c1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  c3:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  c8:	61                   	(bad)  
  c9:	72 00                	jb     cb <__abi_tag-0x2c1>
  cb:	6c                   	ins    BYTE PTR es:[rdi],dx
  cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  ce:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
  d2:	74 00                	je     d4 <__abi_tag-0x2b8>
  d4:	6d                   	ins    DWORD PTR es:[rdi],dx
  d5:	61                   	(bad)  
  d6:	69                   	.byte 0x69
  d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)  
   1:	6d                   	ins    DWORD PTR es:[rdi],dx
   2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   3:	74 2f                	je     34 <__abi_tag-0x358>
   5:	6c                   	ins    BYTE PTR es:[rdi],dx
   6:	61                   	(bad)  
   7:	72 67                	jb     70 <__abi_tag-0x31c>
   9:	65 2f                	gs (bad) 
   b:	6c                   	ins    BYTE PTR es:[rdi],dx
   c:	65 61                	gs (bad) 
   e:	72 6e                	jb     7e <__abi_tag-0x30e>
  10:	69 6e 67 2f 62 75 66 	imul   ebp,DWORD PTR [rsi+0x67],0x6675622f
  17:	66 65 72 5f          	data16 gs jb 7a <__abi_tag-0x312>
  1b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  1c:	76 65                	jbe    83 <__abi_tag-0x309>
  1e:	72 66                	jb     86 <__abi_tag-0x306>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  22:	77 00                	ja     24 <__abi_tag-0x368>
  24:	72 65                	jb     8b <__abi_tag-0x301>
  26:	70 65                	jo     8d <__abi_tag-0x2ff>
  28:	61                   	(bad)  
  29:	74 5f                	je     8a <__abi_tag-0x302>
  2b:	67 72 65             	addr32 jb 93 <__abi_tag-0x2f9>
  2e:	65 74 2e             	gs je  5f <__abi_tag-0x32d>
  31:	63 00                	movsxd eax,DWORD PTR [rax]
